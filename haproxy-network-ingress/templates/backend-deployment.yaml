apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "haproxy-network-ingress.backend.fullname" . }}
  labels:
    app: {{ include "haproxy-network-ingress.backend.fullname" . }}
    chart: {{ include "haproxy-network-ingress.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.backend.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "haproxy-network-ingress.backend.fullname" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ include "haproxy-network-ingress.backend.fullname" . }}
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: haproxy
          image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag }}"
          imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
          command:
            - /bin/sh
          args:
            - -c
            - "while true ; do kill -s HUP 1; echo -e \"HTTP/1.1 200 OK\n\n\" | nc -l -p 5555 ; done & haproxy -f /usr/local/etc/haproxy/haproxy.cfg"
          ports:
            - name: healthz
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: healthz
          readinessProbe:
            httpGet:
              path: /healthz
              port: healthz
          volumeMounts:
          - name: {{ include "haproxy-network-ingress.backend.fullname" . }}-configuration
            mountPath: /usr/local/etc/haproxy/
            readOnly: true
        - image: quay.io/coreos/configmap-reload:v0.0.1
          args:
          - -webhook-url=http://localhost:5555/reload
          - -volume-dir=/haproxy/
          - -webhook-method=GET
          name: config-reloader
          resources:
            limits:
              cpu: 5m
              memory: 10Mi
            requests:
              cpu: 5m
              memory: 10Mi
          volumeMounts:
          - name: {{ include "haproxy-network-ingress.backend.fullname" . }}-configuration
            mountPath: /haproxy/
            readOnly: true
      volumes:
      - configMap:
          defaultMode: 420
          name: {{ include "haproxy-network-ingress.backend.fullname" . }}-configuration
        name: {{ include "haproxy-network-ingress.backend.fullname" . }}-configuration
{{- if .Values.backend.resources }}
      resources:
{{ toYaml .Values.backend.resources | indent 12 }}
{{ end -}}
{{- if .Values.backend.nodeSelector }}
    {{- with .Values.backend.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
{{ end -}}
{{- if .Values.backend.affinity }}
    {{- with .Values.backend.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
{{ end -}}
{{- if .Values.backend.tolerations }}
    {{- with .Values.backend.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
{{ end -}}
